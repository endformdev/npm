name: Release Endform Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number to release (e.g., 2.3.4)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set version environment variable
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      # Download and extract binary for macOS ARM64
      - name: Download and extract macOS ARM binary
        run: |
          VERSION=${{ env.VERSION }}
          FILE="endform-aarch64-apple-darwin.tar.gz"
          URL="https://cli.endform.dev/${VERSION}/endform-aarch64-apple-darwin/${FILE}"
          echo "Downloading ${URL}"
          curl -L -o ${FILE} ${URL}
          mkdir -p packages/endform-darwin-arm64/bin
          tar -xzf ${FILE} -C packages/endform-darwin-arm64/bin

      # Download and extract binary for macOS x86
      - name: Download and extract macOS x86 binary
        run: |
          VERSION=${{ env.VERSION }}
          FILE="endform-x86_64-apple-darwin.tar.gz"
          URL="https://cli.endform.dev/${VERSION}/endform-x86_64-apple-darwin/${FILE}"
          echo "Downloading ${URL}"
          curl -L -o ${FILE} ${URL}
          mkdir -p packages/endform-darwin-x86/bin
          tar -xzf ${FILE} -C packages/endform-darwin-x86/bin

      # Download and extract binary for Linux ARM64
      - name: Download and extract Linux ARM binary
        run: |
          VERSION=${{ env.VERSION }}
          FILE="endform-aarch64-unknown-linux-gnu.tar.gz"
          URL="https://cli.endform.dev/${VERSION}/endform-aarch64-unknown-linux-gnu/${FILE}"
          echo "Downloading ${URL}"
          curl -L -o ${FILE} ${URL}
          mkdir -p packages/endform-linux-arm64/bin
          tar -xzf ${FILE} -C packages/endform-linux-arm64/bin

      # Download and extract binary for Linux x86
      - name: Download and extract Linux x86 binary
        run: |
          VERSION=${{ env.VERSION }}
          FILE="endform-x86_64-unknown-linux-gnu.tar.gz"
          URL="https://cli.endform.dev/${VERSION}/endform-x86_64-unknown-linux-gnu/${FILE}"
          echo "Downloading ${URL}"
          curl -L -o ${FILE} ${URL}
          mkdir -p packages/endform-linux-x86/bin
          tar -xzf ${FILE} -C packages/endform-linux-x86/bin

      # Optionally update the version field in each package.json using jq
      - name: Update package versions
        run: |
          for pkg in packages/endform packages/endform-darwin-arm64 packages/endform-darwin-x86 packages/endform-linux-arm64 packages/endform-linux-x86; do
            echo "Updating version in $pkg/package.json"
            jq --arg version "$VERSION" '.version = $version' $pkg/package.json > $pkg/tmp.json && mv $pkg/tmp.json $pkg/package.json
          done

      # Publish each package to npm (requires an NPM_TOKEN secret)
      - name: Publish packages to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          for pkg in packages/endform packages/endform-darwin-arm64 packages/endform-darwin-x86 packages/endform-linux-arm64 packages/endform-linux-x86; do
            echo "Publishing package in $pkg"
            pushd $pkg
            npm publish --access public
            popd
          done